// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // The register that holds the PC value;
    Register(in=PCIn, out=PCOut, out=out, load=PCLoad);

    // We need to load in data if the load bit is set, if the
    // reset bit is set or if the inc bit is set.
    Or(a=load, b=reset, out=loadOrReset);
    Or(a=loadOrReset, b=inc, out=PCLoad);

    // We need to increment the data if the inc bit is set
    Inc16(in=PCOut, out=PCIncr);

    // We need to be careful to make sure that `reset`
    // overrides `load`, and `load` overrides `inc`.
    Mux16(a=PCIncr, b=in, sel=load, out=incrOrIn);
    Mux16(a=incrOrIn, b=false, sel=reset, out=PCIn);
}
